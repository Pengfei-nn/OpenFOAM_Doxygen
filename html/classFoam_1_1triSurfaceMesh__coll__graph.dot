digraph "triSurfaceMesh"
{
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="triSurfaceMesh",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="searchableSurface",height=0.2,width=0.4,color="red",URL="$classFoam_1_1searchableSurface.html",tooltip="Base class of (analytical or triangulated) surface. Encapsulates all the search routines. WIP. "];
  Node3 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="objectRegistry",height=0.2,width=0.4,color="red",URL="$classFoam_1_1objectRegistry.html",tooltip="Registry of regIOobjects. "];
  Node4 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="triSurface",height=0.2,width=0.4,color="red",URL="$classFoam_1_1triSurface.html",tooltip="Triangulated surface description with patch information. "];
  Node5 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="triSurfaceRegionSearch",height=0.2,width=0.4,color="red",URL="$classFoam_1_1triSurfaceRegionSearch.html",tooltip="Helper class to search on triSurface. Creates an octree for each region of the surface and only searc..."];
  Node6 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" edgeTree_" ,fontname="Helvetica"];
  Node6 [label="autoPtr\< Foam::indexedOctree\l\< Foam::treeDataEdge \> \>",height=0.2,width=0.4,color="red",URL="$classFoam_1_1autoPtr.html"];
  Node7 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" fName_" ,fontname="Helvetica"];
  Node7 [label="fileName",height=0.2,width=0.4,color="red",URL="$classFoam_1_1fileName.html",tooltip="A class for handling file names. "];
  Node7 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" null" ,fontname="Helvetica"];
  Node8 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" regions_" ,fontname="Helvetica"];
  Node8 [label="List\< word \>",height=0.2,width=0.4,color="red",URL="$classFoam_1_1List.html"];
  Node9 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" meshSubDir" ,fontname="Helvetica"];
  Node9 [label="word",height=0.2,width=0.4,color="red",URL="$classFoam_1_1word.html",tooltip="A class for handling words, derived from Foam::string. "];
  Node9 -> Node9 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" null" ,fontname="Helvetica"];
  Node10 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" outsideVolType_" ,fontname="Helvetica"];
  Node10 [label="volumeType",height=0.2,width=0.4,color="red",URL="$classFoam_1_1volumeType.html",tooltip="An enumeration wrapper for classification of a location as being inside/outside of a volume..."];
}
